# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
### Functions

# Brief: check whether a program is installed
#        explanation of which this is the recommended way to check:
#        https://stackoverflow.com/a/677212 
# $1:    The name command to check
function _has() {
    command -v $1 &> /dev/null
}

find() {
    command find "$@" 2>&1 | grep -v "Permission denied"
}

# fuzzy find (fzf) is better
findhere(){
    find . -iname "$1" 2>&1 | grep -v "Permission denied"
}

# ripgrep (rg) is better
grephere(){
	grep -rnw . -e "$1"
}

# recurively find text and replace
# Usage:
# rrp text_to_find text_to_replace_it_with
rrp() {
    grep -rl $1 . | xargs sed -i "s/$1/$2/g"
}

mdcd() {
    mkdir -p "$1" && cd "$1"
}


# credits https://serverfault.com/a/5551
# print the n-th column of the piped buffer
fawk() {
    first="awk '{print "
    last="}'"
    cmd="${first}\$${1}${last}"
    eval $cmd
}

# source https://www.digitalocean.com/community/questions/what-are-your-favorite-bash-aliases
# Syntax: "repeat [X] [command]"
repeat()
{
    local i max
    max=$1; shift;
    for ((i=1; i <= max ; i++)); do # --> C-like syntax
        eval "$@";
    done
}

# cd always followed by ls
# credits @pyratebeard
# https://www.reddit.com/r/linux/comments/7oc5mt/what_are_some_useful_things_you_put_on_your/ds8q7yg?utm_source=share&utm_medium=web2x
cd() {
    builtin cd "$@" && ls -lAh
}

# number of lines
nn() {
	cat "$1" | wc -l
}

# quick kill
k() {
    kill -9 %$1
}

# calculate
c() {
    echo "scale=6; $1" | bc -l 
}

#####################################
# Description:
#   List a range of lines of a file  
# Usage:
#   catl <file> <line_from> <line_to>
#####################################
catl() {
    [ "$#" -ne 3 ] && return 0
    local file="$1"
    local start="$2"
    local end="$3"
    sed -n "${start},${end}p" "$file"
}

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


### Aliases

alias h='history'

# coloured commands
if [ -x /usr/bin/dircolors ]; then
    alias ls='ls --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
    alias grep='grep -I --color=auto'
    alias diff='diff --color'
else
    alias grep='grep -I'
fi

# silent gdb
alias gdb='gdb -q'

# list files
alias ll='ls -alFh'
alias la='ls -A'
alias l='ls -CF'
alias lll='ls -lhtr'
alias llla='ls -lhtrA'
alias cll='clear; ll'
alias clll='clear; lll'
alias cllla='clear; llla' 
# credits: piffey on reddit
alias lsmod="ls -lah --color | awk '{k=0;for(i=0;i<=8;i++)k+=((substr(\$1,i+2,1)~/[rwx]/)*2^(8-i));if(k)printf(\" %0o \",k);print}'"
# count files in directory (not hidden)
alias n='ls -l | grep ^- | wc -l'

alias mx='chmod u+x'
alias mwr='chmod u+w'
alias py='python3'

if _has nvim; then
    alias edit='nvim'
    alias vimrc='nvim ~/.config/nvim/init.vim'
    alias svim='sudo nvim'
    alias v='nvim'
    alias vim='nvim'
    EDITOR=nvim
elif _has vim; then
    alias edit='vim'
    alias vimrc='vim ~/.vimrc'
    alias svim='sudo vim'
    alias v='vim'
    EDITOR=vim
else
    EDITOR=vi
    alias edit=vi
    alias v=vi
fi

bashrc() { edit ~/.bashrc; source ~/.bashrc; }
alias .b='. ~/.bashrc'

alias g=git

alias md='mkdir -p'

alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../..'
alias cd-='cd -'
# expand user aliases
alias sudo='sudo '


### Videos

### Dependant on installed software
_has yt-dlp &&\
    alias yt='yt-dlp --user-agent "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"'


_has fzf &&\
    [ -f ~/.bash/.fzf.bash ] && source ~/.bash/.fzf.bash
    [ -f ~/fzf-bash-completion.sh ] && source ~/fzf-bash-completion.sh
    # fzf can switch between folders/files and copies selection to clipboard
    # Credits for Ctr+A/D: https://github.com/junegunn/fzf/blob/master/ADVANCED.md, the rest are mine
    alias fzf="find * |\
        fzf --prompt 'All> ' --header 'CTRL-D: Directories / CTRL-F: Files' --bind 'ctrl-d:change-prompt(Directories> )+reload(find * -type d)' --bind 'ctrl-f:change-prompt(Files> )+reload(find * -type f)'|\
            sed 's/.*/\"&\"/g' |\
            xargs realpath |\
            tr -d \"\n\" |\
            xclip -selection c -i"


# credits: laggardkernel @https://github.com/ranger/ranger/issues/1554#issuecomment-491650123
if _has ranger; then
    function ranger {
            local IFS=$'\t\n'
            local tempfile="$(mktemp -t tmp.XXXXXX)"
            local ranger_cmd=(
                    command
                    ranger
                    --cmd="map Q chain shell echo %d > "$tempfile"; quitall"
            )
            
            ${ranger_cmd[@]} "$@"
            if [[ -f "$tempfile" ]] && [[ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]]; then
                    cd -- "$(cat "$tempfile")" || return
            fi
            command rm -f -- "$tempfile" 2>/dev/null
    }
fi

_has ranger &&\
	alias r='ranger'

_has zathura &&\
	alias z='zathura'


### Key bindings
# Key bindings that couldn't go into .input rc
bind '"\C-F":"fzf\n"'
